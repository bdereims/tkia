apiVersion: v1
data:
  ca.pem: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUY4VENDQTltZ0F3SUJBZ0lVTUhmNDRsRWNjNy9rYVFvNGZua0RCWDk4RkhFd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2dZY3hDekFKQmdOVkJBWVRBa1pTTVE0d0RBWURWUVFJREFWUVlYSnBjekVPTUF3R0ExVUVCd3dGVUdGeQphWE14RlRBVEJnTlZCQW9NREdOc2IzVmtMV2RoY21GblpURVJNQThHQTFVRUN3d0ljMlZ5ZG1salpYTXhMakFzCkJnTlZCQU1NSldOd2IyUXRaR1YyY21WaFpIa3VZWG90Wm10a0xtTnNiM1ZrTFdkaGNtRm5aUzV1WlhRd0hoY04KTWpFeE1ERXhNVFV6TWpBM1doY05NekV4TURBNU1UVXpNakEzV2pDQmh6RUxNQWtHQTFVRUJoTUNSbEl4RGpBTQpCZ05WQkFnTUJWQmhjbWx6TVE0d0RBWURWUVFIREFWUVlYSnBjekVWTUJNR0ExVUVDZ3dNWTJ4dmRXUXRaMkZ5CllXZGxNUkV3RHdZRFZRUUxEQWh6WlhKMmFXTmxjekV1TUN3R0ExVUVBd3dsWTNCdlpDMWtaWFp5WldGa2VTNWgKZWkxbWEyUXVZMnh2ZFdRdFoyRnlZV2RsTG01bGREQ0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQwpBZ29DZ2dJQkFLMzVjNVpOTkpRQWJZcHBJTU5USFg4aHZiYzBxTE1rNHR5M1ZpZWVzQU9JL2Y3eTE4dXZ3QkZ4CjJNTFVGdm1RWjlaV1NQdTlNSWRielJBWkpFNEpObmtEdFV5NTViWnJGYzJxYU9mOGJvMFVETWYzc0xZWGd1NjUKWERRR0pKaG00RHBrSzYrUElYUURNcVBYUjltQVBiaDRPelpRN09UNG9oc1pDa0M4eUcxbXo2VzFXT3VycHB0cgpPMEtQTnBJOVBkVnhLWGVQN3pKcHBiY1ZqWHNabFBCbEdDcEdiZlJ0ZzdpcjlrQTNYNU1rVFhhajI1TENJRms3CnhQSlJWSkVqY3Fwemt1UkdnNndnQTlkdU5SMkdsK1dtUGdpNnNvR21JT2tNSjQ2SnV6bDBITVZhYmFlM2ptWlcKM1ZVTVJLSE5SdDJ2bVZCQ2hzR3ZUTXBMM2FJV3hpbngrblZQekNMbFUxWDAzYXAyUGtFclUrSjdwRUpWRENVcApqaHRzKzJCN25Gd2hTSlhtUkwzT3hKRjFlNEV5b1BWdzRBL0RsTU82NkplQ2tOTWNxV2VPdHc2UlNKVTdqNGd5Cmw2S0VjNmI2KzZtdFJucnVXb0didjlrbnRVUEFRUUZaaUhTay9wQi9OK29PNlNJMUN0RW1NTFA0ZjJPUERhekgKRW80bkgyL1Fubit4UmdPa0FJN3kvam82a0JBZWhpZXBNNXZlWDFJR1Y5QkNpYlZWRFY3TTRMQlRUWElJcjhnWQphNXFEc2dHcWtVZlNPb092SzR0b2V6NTdrbzZKWWlxTG5JbnNscUNYaVZFbTZYL2wvTDUvcE9vZk9nME5VNWdpClNyK0VDTkNPcVNPVDk2aVM1aHlwOXRqdjR4QlhXS2hRU0dzbnFKQThjd0dhSmtqVUt2Y1BBZ01CQUFHalV6QlIKTUIwR0ExVWREZ1FXQkJSUlJCNzVkYzJ6REwwaXc1bGhFbHBoQllrNjdqQWZCZ05WSFNNRUdEQVdnQlJSUkI3NQpkYzJ6REwwaXc1bGhFbHBoQllrNjdqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJEUVVBCkE0SUNBUUF3dHRzM0U4b2FhSWVKYWkvazFKdHB1azR1MXhxN2xEajRURnl6TjNHYnZad3FQZEIwcFRPam81ZzIKZXhEdERmZjlZRExlYncyOFA1NW81MVhRRFo4ellLZmEvOWErT0VpSUxUNGtZZUlGVXoyYWJScVFsZXJsS1ROMQo4enBMeTdteTRyYnF5eEd1YldQUXpJcTFrZG9QUjZQVVpvR2tjMTA3Ulh5akpwZE1QTEl1Wmw4TUJmMjd4RTJFCnZEMzAwa1crT2Z4b3o0NWlTTlpYc0VCeEcxN0FYSmJwMmVoaUExVFE3QjdFNnFJTjdUc3RQQ3Q0M1dmWURDTlMKRzcrWkh0RitUZS9DaWdNRXY5YWRMNU5TaVpmQ1c5czZ3MWE0V2ZWeEtscmg4RXRpbzBQSUc1dU1zRUE4d0ZqeQpuQS9aalNmVXNFQ1ptbm41bnhScUIzemtUeU56Y2FtM2tpanJRYmwybWc3UGpQZjg2MmhxYjZIZjdtTnhVNkRPClVJekNNQzc5Y08rZm1ua2xocWZXaDUwV21ldzBOQmVCcS8zNzkrU0lSQmpCR1E3MXRlZTVSV2JaWEFmbGhHSDcKQmZPL1Y1NXlNdVZlcGVsUTZoSTNtcjVFdEdIV1NmLzdkeFErWnNGQlBBb0Q5aDJ5S21MdTlNQndEVng4MisrVApGc2RpY3VzWFJERjYralFFVmJMU1NrQVRQWVpVSTNIVjhxUTBkNmN3ZFpMZWJwdFUxWEpyTnZWVTFvUzAzVk9hCjhqa2JIczJoeFpjeWNtVFRQS2R2SS9yOFdrb1h5WUpDK25xb1R0eWRQTmJqczZqSjB5cnBMYUU5VjI0enlWbmsKTlVoZmRNZDU2TCtMSkRZb21kZlFyaGNFS0lOeTd5R0orK3ZwcEdJb0ZLUFlocHhoVEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==" 

kind: ConfigMap
metadata:
  name: trusted-ca-cm
  namespace: default

---
apiVersion: v1
data:
    build-ca.sh: "#!/usr/bin/env bash \nset -euxo pipefail\ntdnf update \ntdnf install -y ca-certificates\ntdnf install -y openssl-c_rehash\necho \"$TRUSTED_CERT\" > /usr/local/share/ca-certificates/my-trusted-cert.pem\n/usr/bin/rehash_ca_certificates.sh\ncurl -vv https://harbor.net\n"
kind: ConfigMap
metadata:
    name: rehash-script
    namespace: default

---    
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: trusted-ca-updater
  namespace: default
  labels:
    k8s-app: trusted-ca-updater
spec:
  selector:
    matchLabels:
      name: trusted-ca-updater
  template:
    metadata:
      labels:
        name: trusted-ca-updater
    spec:
      tolerations:
      # this toleration is to have the daemonset runnable on master nodes
      # remove it if your masters can't run pods
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      initContainers:
      - name: script-runner
        image: photon:3.0
        command: ["/bin/sh", "-c", "/root/build-ca.sh" ]
        volumeMounts:
        - name: update-trusted-certs-script
          mountPath: /root/
        - name: certs-dir
          mountPath: /etc/ssl/certs
        - name: agg-certs-dir
          mountPath: /usr/local/share/ca-certificates 
        env:
        - name: TRUSTED_CERT
          valueFrom:
            configMapKeyRef:
              name: trusted-ca-cm
              key: ca.pem    
        resources:
            limits:
              ephemeral-storage: 1Gi 
      containers:
      - name: sleepy
        image: photon:3.0
        command: ["/bin/sh"]
        args: ["-c", "while true; do sleep 3600;done"]
      volumes:
      - name: update-trusted-certs-script
        configMap:
            name: rehash-script
            defaultMode: 0766
      - name: certs-dir
        hostPath:
          path: /etc/ssl/certs
          type: Directory
      - name: agg-certs-dir
        hostPath:
          path: /usr/local/share/ca-certificates
          type: Directory
