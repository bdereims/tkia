---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: definitions.autoscaling.tsm.tanzu.vmware.com
spec:
  group: autoscaling.tsm.tanzu.vmware.com
  names:
    kind: Definition
    listKind: DefinitionList
    plural: definitions
    shortNames:
      - asd
    singular: definition
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.scaleRule.enabled
          name: Enabled
          type: boolean
        - jsonPath: .spec.scaleRule.mode
          name: Mode
          type: string
        - jsonPath: .spec.scaleRule.trigger.metric.name
          name: Trigger
          type: string
        - jsonPath: .spec.scaleRule.instances.min
          name: Min
          type: integer
        - jsonPath: .spec.scaleRule.instances.max
          name: Max
          type: integer
        - jsonPath: .status.currentReplicas
          name: Current
          type: integer
        - jsonPath: .status.desiredReplicas
          name: Desired
          type: integer
        - jsonPath: .status.autoscalingReady
          name: Ready
          type: boolean
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Definition is the Schema for the definitions API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: DefinitionSpec defines the desired state of Definition
              properties:
                scaleRule:
                  description: ScaleRule defines individual autoscaling properties
                  properties:
                    enabled:
                      description:
                        Enabled defines whether the rule is active. When
                        set to false this puts the autoscaler into recommendation ("dry-run")
                        mode.
                      type: boolean
                    instances:
                      description:
                        ScaleInstancesConfig influences autoscaling by enforcing
                        min/max scaling boundaries. Optionally, a Default instance count
                        can be specified which is used when the autoscaler does not
                        have sufficient information, e.g. metrics, to perform a correct
                        calculation. If both, StepsUp/Down, are specified (optional),
                        the autoscaler will scale instances based on the steps defined
                        instead of using proportional autoscaling.
                      properties:
                        default:
                          description:
                            Default instance count, if specified, is enforced
                            when the autoscaler has not enough information, e.g. metrics,
                            to perform a precise calculation. If current > default instances,
                            no scaling action is performed.
                          format: int32
                          minimum: 1
                          type: integer
                        max:
                          description:
                            Max sets the maximum instance count enforced
                            by the autoscaler
                          format: int32
                          maximum: 1000
                          minimum: 1
                          type: integer
                        min:
                          description:
                            Min sets the minimum instance count enforced
                            by the autoscaler
                          format: int32
                          maximum: 1000
                          minimum: 1
                          type: integer
                        stepsDown:
                          description:
                            StepsDown, if specified, defines that the desired
                            instance count will be decremented by this value as opposed
                            to the default proportional scaling. If specified, StepsUp
                            must also be set.
                          format: int32
                          minimum: 1
                          type: integer
                        stepsUp:
                          description:
                            StepsUp, if specified, defines that the desired
                            instance count will be incremented by this value as opposed
                            to the default proportional scaling. If specified, StepsDown
                            must also be set.
                          format: int32
                          minimum: 1
                          type: integer
                      required:
                        - max
                        - min
                      type: object
                    mode:
                      description: Mode defines the scaling mode to use
                      enum:
                        - EFFICIENCY
                        - PERFORMANCE
                      type: string
                    trigger:
                      description:
                        ScaleTriggerConfig defines the trigger used for calculating
                        the desired instance count and scaling action
                      properties:
                        gracePeriodSeconds:
                          default: 300
                          description:
                            GracePeriodSecond will not initiate a scale down
                            if the last scaling action is within this time window. However,
                            scale up actions are always performed and are not affected
                            by this setting. If set to zero grace period is disabled
                            for this object.
                          format: int64
                          type: integer
                        metric:
                          description:
                            ScaleMetric defines the metric and associated
                            ScaleUp/Down thresholds used for calculating the desired
                            instance count. Optionally, WindowSeconds can be specified
                            to define the "look-back" time window for the metric query.
                          properties:
                            name:
                              description:
                                Name is a supported service mesh metric to
                                use for scaling operations
                              enum:
                                - RequestPS
                                - Requests
                                - CPUUsagePercent
                                - CPUUsageMillicores
                                - MemoryUsageBytes
                                - MemoryUsagePercent
                                - p50Latency
                                - p90Latency
                                - p99Latency
                              type: string
                            scaleDown:
                              description:
                                ScaleDown defines the threshold used to initiate
                                a scale down action
                              format: int64
                              type: integer
                            scaleUp:
                              description:
                                ScaleUp defines the threshold used to initiate
                                a scale up action
                              format: int64
                              type: integer
                            windowSeconds:
                              description:
                                WindowSeconds, if specified, sets the "look-back"
                                time window in seconds for the given metric
                              format: int64
                              maximum: 3600
                              minimum: 60
                              type: integer
                          required:
                            - name
                            - scaleDown
                            - scaleUp
                          type: object
                      required:
                        - metric
                      type: object
                  required:
                    - enabled
                    - instances
                    - mode
                    - trigger
                  type: object
                scaleTargetRef:
                  description: ScaleTargetRef defines the scalable object to act on
                  properties:
                    kubernetes:
                      description:
                        KubernetesScaleTargetRef is a scalable Kubernetes
                        resource
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                      required:
                        - kind
                        - name
                      type: object
                  required:
                    - kubernetes
                  type: object
              required:
                - scaleRule
                - scaleTargetRef
              type: object
            status:
              description: DefinitionStatus defines the observed state of Definition
              properties:
                autoscalingReady:
                  description:
                    AutoscalingReady defines if the autoscaler is ready to
                    act on this object. False if one or more conditions have severity
                    level "ERROR".
                  type: boolean
                conditions:
                  description:
                    Conditions is the set of conditions required for this
                    autoscaler to scale its target, and indicates whether or not those
                    conditions are met
                  items:
                    description:
                      Condition defines an extension to status (i.e. an observation)
                      of an Autoscaling resource.
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another.
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description:
                          The reason for the condition's last transition.
                          Reasons should be CamelCase.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it should be interpreted
                          as "Unknown" in case of Status==false.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                currentMetric:
                  description:
                    CurrentMetric reflects the metric used by the autoscaler
                    to calculate the desired instance count
                  properties:
                    name:
                      type: string
                    value:
                      format: int64
                      type: integer
                  required:
                    - name
                    - value
                  type: object
                currentReplicas:
                  description:
                    CurrentReplicas is the number of replicas in running
                    state as seen by the autoscaler. Not set when AutoscalingReady ==
                    false.
                  format: int32
                  type: integer
                desiredReplicas:
                  description:
                    DesiredReplicas is the target number of replicas calculated
                    by the autoscaler. Not set when AutoscalingReady == false.
                  format: int32
                  type: integer
                failureMessage:
                  description:
                    FailureMessage indicates that there is a fatal problem
                    reconciling the state, and will be set to a descriptive error message
                  type: string
                failureReason:
                  description:
                    FailureReason indicates that there is a fatal problem
                    reconciling the state, and will be set to a token value suitable
                    for programmatic interpretation.
                  type: string
                lastScaleTime:
                  description:
                    LastScaleTime is set/updated after performing a scaling
                    action
                  format: date-time
                  type: string
                observedGeneration:
                  description:
                    ObservedGeneration is the latest generation observed
                    by the controller
                  format: int64
                  type: integer
              required:
                - autoscalingReady
                - conditions
                - observedGeneration
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []